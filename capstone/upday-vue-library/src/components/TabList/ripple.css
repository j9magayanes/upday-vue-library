.element-with-ripple {
    position: relative;
    overflow: hidden;
  }
  
.ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0.66);
    animation: ripple 350ms ease forwards; /* here we used forwards because we want our ripples to remain on the selected element when user is still pressing the element. */
    background-color: rgba(255, 9, 9, 0.967);
    pointer-events: none;
  }
  
  .ripple-left {
    content: '';
    border-radius: 100%;
    animation: ripple-left 125ms forwards;
  }
  
  .ripple-right {
    content: '';
    border-radius: 100%;
    animation: ripple-right 125ms forwards;
  }
  
  .toggle-circle {
    display: none;
  }
  
  .toggle-right {
    content: '';
    border-radius: 100%;
    animation: toggle-right 300ms forwards;
  }
  
  .toggle-left {
    content: '';
    border-radius: 100%;
    animation: toggle-left 300ms forwards;
  }
  
  /* In case of nightmode, we simply added a nightmode class to the selected element and inverted color of a ripple. */
  .nightmode span.ripple {
    filter: invert(1);
  }
  
  /* when prefers-color-scheme is set to dark */
  @media (prefers-color-scheme: dark) {
    span.ripple {
      background-color: rgba(255 255 255 / 20%);
    }
  }
  
  @keyframes ripple {
    100% {
      transform: scale(2);
      opacity: 100%;
    }
  }
  
  @keyframes ripple-left {
    0% {
      transform: translateX(1px);
      opacity: 0.2;
      transform-origin: 0 0;
    }
    50% {
      transform: translateX(1px);
      opacity: 0.2;
    }
    100% {
      transform: translateX(1px);
      opacity: 0;
      transform-origin: 0 0;
    }
  }
  
  @keyframes ripple-right {
    0% {
      transform: translateX(1px) scale(0);
      transform-origin: 18px 2px;
    }
    50% {
      transform: translateX(1px) scale(1);
  
      transform-origin: 18px 2px;
    }
    100% {
      transform: translateX(1px) scale(1.3);
  
      transform-origin: 18px 2px;
    }
  }
  
  @keyframes toggle-right {
    0% {
      transform: translateX(-14px) translateY(0px) scale(1);
      transform-origin: 50% 50%;
    }
    10% {
      transform: translateX(-14px) translateY(-2px) scale(0.9);
      transform-origin: 50% 50%;
    }
  
    20% {
      transform: translateX(-10px) scale(1);
      transform-origin: 50% 50%;
    }
  
    100% {
      transform: translateX(-0px) scale(1);
    }
  }
  
  @keyframes toggle-left {
    0% {
      transform: translateX(14px) translateY(0px) scale(1);
      transform-origin: 50% 50%;
    }
    10% {
      transform: translateX(14px) translateY(-2px) scale(0.9);
      transform-origin: 50% 50%;
    }
    20% {
      transform: translateX(10px) scale(1);
      transform-origin: 50% 50%;
    }
  
    100% {
      transform: translateX(0px) scale(1);
    }
  }
  